# Copyright (c) 2020 Patrick Diehl
#               
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

version: 2
jobs:
    build:
        docker:
          - image: diehlpk/nonlocalmodels:baseimage
        steps:
            - checkout
            - run:
                name: Configure 
                command: | 
                  mkdir -p build 
                  cd build 
                  cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Documentation=ON -DEnable_Tools=ON -DEnable_RPM=ON ..
            - run:
                name: Build
                command: |  
                  cd build 
                  make -j 2
            - run:
                name: Test
                command: |
                  cd build 
                  make test
            - run:
                name: Documentation
                command: |
                  cd build
                  make doc
            - run:
                name: Generate RPM package
                command: |
                  mkdir final
                  cd build
                  cpack -G RPM
                  cp *.rpm ../final
            - store_artifacts:
                path: final
                destination: packages
    build_pcl:
        docker:
          - image: diehlpk/nonlocalmodels:baseimage
        steps:
            - checkout
            - run:
                name: Configure 
                command: | 
                  mkdir -p build 
                  cd build 
                  cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Documentation=ON -DEnable_Tools=ON -DEnable_PCL=ON ..
            - run:
                name: Build
                command: |  
                  cd build 
                  make -j 2
            - run:
                name: Test
                command: |
                  cd build 
                  make test
    codecoverage:
      docker: 
        - image: diehlpk/nonlocalmodels:baseimage
      steps:
        - checkout
        - run:
            name: Configure
            command: |
              mkdir -p build
              cd build
              cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Tools=ON -DCMAKE_CXX_FLAGS="-g -O0 -fprofile-arcs -ftest-coverage -fpic" ..
              make 
        - run:
            name: Run tests
            command: |
              cd build
              make test
        - run:
            name: Report
            command: |
              cd build
              gcovr --exclude-directories=build --exclude-directories=data --exclude-directories=/usr/include/ -r ..
        - run:
            name: Publish code coverage
            command: |
              if [ "${CIRCLE_BRANCH}" == "main" ]; then
                cd build
                COVERALLS_REPO_TOKEN="${CTOKEN}" coveralls -i src --gcov-options '\-lp' 
              fi
    deploy:
      machine:
        image: ubuntu-2004:202008-01
      environment:
        IMAGE_FOLDER_NAME: .circleci/Docker
        IMAGE_NAME: diehlpk/nlmech:latest
      steps:
        - checkout
        - run:
           name: Build Docker image
           command: |
              docker build -t ${IMAGE_NAME} ${IMAGE_FOLDER_NAME}
              docker images
        - run: 
           name: Deploy to DockerHub
           command: |
                docker login -u $DOCKER_USER -p $DOCKER_PASS
                docker push ${IMAGE_NAME}
        - run: 
           name: Deploy to GitHub
           command: |
                docker login docker.pkg.github.com --username diehlpk -p ${TOKEN}
                docker tag ${IMAGE_NAME} docker.pkg.github.com/nonlocalmodels/nlmech/nlmech:latest
                docker push docker.pkg.github.com/nonlocalmodels/nlmech/nlmech:latest
    documentation:
      docker:
        - image: diehlpk/nonlocalmodels:baseimage
      steps:
        - checkout
        - run:
            name: Configure 
            command: |
              mkdir -p build 
              cd build 
              cmake -DCMAKE_BUILD_TYPE=Release -DEnable_Documentation=ON ..
        - run:
            name: Documentaiton
            command: |
              cd build
              make doc
        - run:
            command: |
                if [ "${CIRCLE_BRANCH}" == "main" ]; then
                  git clone https://github.com/nonlocalmodels/nonlocalmodels.github.io.git
                  cd nonlocalmodels.github.io
                  git fetch
                  git pull
                  mkdir -p documentation
                  cp -r ../docs/doxy/html/* documentation/
                  git config --global user.name "Circle CI"
                  git config --global user.email "bot@circleci.com"
                  git add ./documentation/*
                  git commit -m "Update documentation [ci skip] " ./documentation/* || true
                  git push https://${TOKEN}@github.com/nonlocalmodels/nonlocalmodels.github.io || true
                fi
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - codecoverage:
            filters:
              branches:
                ignore: gp-pages
            requires:
              - build
      - deploy:
            filters:
              branches:
                 ignore: gh-pages
                 only: main
            requires:
              - codecoverage
              - documentation
      - documentation:
            filters:
              branches:
                ignore: gh-pages
            requires:
              - build
      - build_pcl:
            filters:
              branches:
                ignore: gh-pages
            requires:
              - build
